2013-08-07 10:36:54  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:36:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:36:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:36:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:36:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-07 10:36:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-07 10:36:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:36:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:36:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:36:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:36:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:36:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:36:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-07 10:36:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 10:36:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:36:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-07 10:36:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-07 10:36:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:36:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:36:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:36:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:36:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:36:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:36:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:36:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:36:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:37:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:37:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:37:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:37:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:37:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:37:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:37:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:37:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:37:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:37:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:37:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:37:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:37:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:37:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:37:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:38:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:38:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:38:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:38:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:38:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:38:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:38:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:38:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:38:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:38:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:38:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:38:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:38:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:38:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-07 10:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 10:39:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:39:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:39:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:39:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:39:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:39:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:39:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:39:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:39:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:39:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:39:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:40:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:40:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:40:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:40:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:40:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:40:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:40:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:40:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:40:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:40:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:40:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:40:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:40:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:41:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:41:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:41:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:41:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:29  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:29  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 10:41:29  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-07 10:41:29  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 10:41:29  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-07 10:41:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:41:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:41:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:41:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:41:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 10:41:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 10:41:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 10:41:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 10:41:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 10:41:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:32  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:45:32  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:32  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:45:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:45:32  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:32  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-07 13:45:32  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-07 13:45:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:45:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:45:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:45:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:45:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:45:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:45:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:45:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:46:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:46:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:46:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:46:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:46:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:46:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:46:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:46:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:46:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:46:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:46:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:46:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:46:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:46:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:46:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:47:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:47:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:47:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:47:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:47:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:47:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:47:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:47:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:47:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:47:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:47:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:47:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:48:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:48:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:30  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:30  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-07 13:48:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:48:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:48:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:30  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-07 13:48:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-07 13:48:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-07 13:48:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:48:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:48:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-07 13:48:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-07 13:48:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:48:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:48:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:48:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:48:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:48:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:48:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:48:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:49:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:49:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:49:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:49:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:49:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:49:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:49:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:49:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:49:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:49:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:49:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:49:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:49:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:49:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:49:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:50:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:50:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:50:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:50:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:50:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:50:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:50:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:50:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:50:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:50:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:50:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:50:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:50:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-07 13:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:51:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:51:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:51:27  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:27  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-07 13:51:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:27  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-07 13:51:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:28  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-07 13:51:28  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:51:28  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:28  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-07 13:51:28  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-07 13:51:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:51:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:51:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:51:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:51:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:51:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:51:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:51:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:51:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:51:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:52:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:52:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:52:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:52:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:52:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:52:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:52:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:52:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:52:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:52:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:52:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:52:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:52:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:52:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:52:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:53:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:53:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:53:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:53:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-07 13:54:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:54:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:54:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:54:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:54:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:54:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:54:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:54:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 13:54:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-07 13:54:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 13:54:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-07 13:54:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:54:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:54:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:33  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-07 13:55:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-07 13:55:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-07 13:55:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:55:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-07 13:55:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-07 13:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:55:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:55:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-07 13:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:56:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:56:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:56:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:56:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-07 13:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:57:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:57:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:57:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:57:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-07 13:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:58:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:58:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:58:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:58:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-07 13:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-07 13:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:59:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:59:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 13:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:38  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:38  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 13:59:38  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-07 13:59:38  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 13:59:38  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-07 13:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-07 13:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String), 2013-07-08(String), 2013-08-07(String)
2013-08-07 13:59:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 13:59:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-07 13:59:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-07 17:37:40  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:40  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-07 17:37:40  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-07 17:37:40  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:40  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-07 17:37:40  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-07 17:37:49  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:49  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-07 17:37:49  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-07 17:37:49  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:49  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-07 17:37:49  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 1(String), 1(String)
2013-08-07 17:37:49  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:49  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-07 17:37:49  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@40bd(String), w00132:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-07 17:37:50.0(Timestamp), null, 16573(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: null, w00132(String), 4QrcOUm6Wau+VuBX8g+IPg==(String),  0951-6132509(String), 15909611338(String), 天津(String), 天津市(String), 和平区(String), 111(String),  M(String), null, null, huhuaiwent@163.com(String),  1(String), null, 2(String), null, 1(String), null, null, null, w00132(String), 宁夏圆顺通物流有限公司(String), w00132(String), 2013-08-07 17:37:50.0(Timestamp), 16573(String), 120000(String), ,MTEx,M1BF,MTEx(String), null, VjYy(String), MTIz(String), (String), 16573(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_state= ? and site_code = ? order by cteate_time desc 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 1(String), w00132(String)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-07 17:37:50  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 2(String), 6(Integer)
2013-08-07 17:37:52  DEBUG [3061987@qtp-21761200-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:52  DEBUG [3061987@qtp-21761200-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:37:52  DEBUG [3061987@qtp-21761200-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:37:52  DEBUG [3061987@qtp-21761200-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:52  DEBUG [3061987@qtp-21761200-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:37:52  DEBUG [3061987@qtp-21761200-4] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:37:52  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:52  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-07 17:37:52  DEBUG [5824972@qtp-21761200-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), w00132(String), 3(String)
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-28(String)
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-29(String)
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-30(String)
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-31(String)
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-08-01(String)
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-08-02(String)
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-08-03(String)
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-08-04(String)
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-08-05(String)
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 17:37:52  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-08-06(String)
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:37:53  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:37:57  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:57  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:37:57  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:37:57  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:37:57  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:37:57  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:38:18  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:38:19  DEBUG [8403475@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:38:19  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:19  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:38:19  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:38:19  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:19  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:38:19  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:38:48  DEBUG [20992465@qtp-21761200-3] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:38:49  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:49  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:38:49  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:38:49  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:38:49  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:38:49  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:40:47  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:40:48  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:40:48  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:40:48  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:40:48  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:40:48  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:40:48  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:41:30  DEBUG [26062556@qtp-21761200-9] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:41:31  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:41:31  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:41:31  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:41:31  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:41:31  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:41:31  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:42:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:43:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:43:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:43:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:43:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:43:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:43:37  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:43:54  DEBUG [30239323@qtp-21761200-11] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:43:55  DEBUG [14365881@qtp-21761200-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:43:55  DEBUG [14365881@qtp-21761200-14] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:43:55  DEBUG [14365881@qtp-21761200-14] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:43:55  DEBUG [14365881@qtp-21761200-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:43:55  DEBUG [14365881@qtp-21761200-14] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:43:55  DEBUG [14365881@qtp-21761200-14] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:47:26  DEBUG [7105985@qtp-21761200-13] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:47:27  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:27  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:47:27  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:47:27  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:27  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:47:27  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:47:46  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:47:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:47:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:47:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:47:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:47:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:48:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:48:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:48:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:48:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:48:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:48:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:53:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:53:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:53:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:53:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:53:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:53:47  DEBUG [16950686@qtp-21761200-10] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:55:13  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:55:14  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:55:14  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:55:14  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:55:14  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:55:14  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:55:14  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:56:37  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:56:38  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:56:38  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:56:38  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:56:38  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:56:38  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:56:38  DEBUG [7499384@qtp-21761200-17] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:58:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:58:51  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:58:51  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:58:51  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:58:51  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:58:51  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:58:51  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 17:59:47  DEBUG [2040263@qtp-21761200-21] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 17:59:48  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:59:48  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 17:59:48  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 17:59:48  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 17:59:48  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 17:59:48  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:00:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:00:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:00:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 18:00:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:00:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:00:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:05:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:05:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:05:50  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 18:05:51  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:05:51  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:05:51  DEBUG [29018597@qtp-21761200-20] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:10:57  DEBUG [32936900@qtp-21761200-27] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:10:57  DEBUG [32936900@qtp-21761200-27] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:10:57  DEBUG [32936900@qtp-21761200-27] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 18:10:57  DEBUG [32936900@qtp-21761200-27] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:10:57  DEBUG [32936900@qtp-21761200-27] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:10:57  DEBUG [32936900@qtp-21761200-27] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:16:30  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:30  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-07 18:16:30  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-07 18:16:31  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:31  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-07 18:16:31  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 1(String), 1(String)
2013-08-07 18:16:32  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:32  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-07 18:16:32  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer)
2013-08-07 18:16:32  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:32  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-07 18:16:32  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@40bd(String), w00132:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-07 18:16:32.119(Timestamp), null, 16573(Integer)
2013-08-07 18:16:32  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:32  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-07 18:16:32  DEBUG [18677844@qtp-25881246-2] (Slf4jImpl.java:28) - ==> Parameters: null, w00132(String), 4QrcOUm6Wau+VuBX8g+IPg==(String),  0951-6132509(String), 15909611338(String), 天津(String), 天津市(String), 和平区(String), 111(String),  M(String), null, null, huhuaiwent@163.com(String),  1(String), null, 2(String), null, 1(String), null, null, null, w00132(String), 宁夏圆顺通物流有限公司(String), w00132(String), 2013-08-07 18:16:32.119(Timestamp), 16573(String), 120000(String), ,MTEx,M1BF,MTEx(String), null, VjYy(String), MTIz(String), (String), 16573(Integer)
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 18:16:32  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:16:33  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:16:41  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:41  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-07 18:16:41  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer)
2013-08-07 18:16:41  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:41  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_state= ? and site_code = ? order by cteate_time desc 
2013-08-07 18:16:41  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 1(String), w00132(String)
2013-08-07 18:16:42  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:42  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-07 18:16:42  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-07 18:16:42  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-07 18:16:42  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 2(String), 6(Integer)
2013-08-07 18:16:42  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:42  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:16:42  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:16:43  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:43  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-07 18:16:43  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), w00132(String), 3(String)
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-28(String)
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-29(String)
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-30(String)
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-31(String)
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-08-01(String)
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-08-02(String)
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-08-03(String)
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-08-04(String)
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-08-05(String)
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:16:43  DEBUG [13343810@qtp-25881246-3] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-08-06(String)
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer)
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 18:18:48  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-07 18:18:50  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:18:50  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:18:50  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-07 18:18:50  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:18:50  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:18:50  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:18:57  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:18:57  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_STATS_MESSAGE t WHERE t.stats_reason = ? 
2013-08-07 18:18:57  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: net.ytoec.kernel.dataobject.User@40bd(String)
2013-08-07 18:18:57  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:18:57  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: update EC_CORE_STATS_MESSAGE t set t.stats_type = ?, t.stats_reason = ?, t.remark = ?, t.login_time = ?, t.logout_time = ?, t.user_id = ?, t.update_time = now() where t.id = ? 
2013-08-07 18:18:57  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 0(String), net.ytoec.kernel.dataobject.User@40bd(String), w00132:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-06-04 18:19:08.0(Timestamp), 2013-08-07 18:18:57.807(Timestamp), 16573(Integer), 2051784(Integer)
2013-08-07 18:19:05  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 1(String), 1(String)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@c(String), 100009:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-07 18:19:06.113(Timestamp), null, 12(Integer)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: null, 100009(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 010-64262238(String), 18001387001(String), 北京(String), 北京市(String), 朝阳区(String), 黄寺大街12号华沛写字楼A座一层(String),  M(String), null, null, 363169133@qq.com(String),  1(String), 771037(String), 2(String), null, 1(String), null, null, null, 100009(String), 和记黄埔（中国）商贸有限公司(String), 100009(String), 2013-08-07 18:19:06.113(Timestamp), 12(String), 110000(String), ,MDAwMDk=,TXZBYw==,eXRvMQ==(String), true(String), null, null, null, 12(Integer)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_state= ? and site_code = ? order by cteate_time desc 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 100009(String)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 2(String), 6(Integer)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-28(String)
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-07 18:19:06  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 100009(String), 3(String)
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-29(String)
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-30(String)
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-31(String)
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-08-01(String)
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-08-02(String)
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-08-03(String)
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-08-04(String)
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-08-05(String)
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-07 18:19:06  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-08-06(String)
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: K10000902(String), 0(Integer)
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: K10000902(String)
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: K10000902(String)
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 18:19:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: K10000902(String)
2013-08-07 18:19:08  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:08  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:19:08  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-07 18:19:08  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:08  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:19:08  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000483(String), 0(Integer)
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000483(String)
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000483(String)
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 18:19:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000483(String)
2013-08-07 18:19:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:19:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-07 18:19:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:19:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000448(String), 0(Integer)
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000448(String)
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000448(String)
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 18:19:21  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000448(String)
2013-08-07 18:19:22  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:22  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:19:22  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-07 18:19:22  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:22  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:19:22  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000297(String), 0(Integer)
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000297(String)
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000297(String)
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000297(String)
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:19:24  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000905(String), 0(Integer)
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000905(String)
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000905(String)
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 18:19:31  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000905(String)
2013-08-07 18:19:32  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:32  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:19:32  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-07 18:19:32  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:19:32  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:19:32  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000291(String), 0(Integer)
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000291(String)
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000291(String)
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 18:20:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000291(String)
2013-08-07 18:20:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:20:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-07 18:20:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:20:18  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000901(String), 0(Integer)
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000901(String)
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000901(String)
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 18:20:19  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000901(String)
2013-08-07 18:20:20  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:20  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:20:20  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-07 18:20:20  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:20:20  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:20:20  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000483(String), 0(Integer)
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000483(String)
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000483(String)
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 18:21:17  DEBUG [6270034@qtp-25881246-7] (Slf4jImpl.java:28) - ==> Parameters: K10000483(String)
2013-08-07 18:21:18  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:18  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:21:18  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-07 18:21:18  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:18  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:21:18  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: K10000298(String), 0(Integer)
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: K10000298(String)
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: K10000298(String)
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 18:21:56  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: K10000298(String)
2013-08-07 18:21:57  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:57  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:21:57  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-07 18:21:57  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:21:57  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:21:57  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
2013-08-07 18:22:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:22:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-07 18:22:07  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: K10000483(String), 0(Integer)
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: K10000483(String)
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: K10000483(String)
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: K10000483(String)
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-07 18:22:08  DEBUG [31811315@qtp-25881246-4] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-29 00:00:00.0(Timestamp), 2013-08-08 00:00:00.0(Timestamp), 0(String)
